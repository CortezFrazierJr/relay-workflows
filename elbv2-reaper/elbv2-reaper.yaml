  apiVersion: v1
  description: Automatically clean up ELB v2 load balancers that have no targets

  parameters:
    region:
      description: The AWS region to run in
      default: us-east-1
    dryRun:
      description: True if this workflow should only print the resources it would delete
      default: 'true'
  steps:
  - name: describe-ELBv2-load-balancers
    image: projectnebula/elbv2-describe-load-balancers
    spec:
      aws: &aws
        region: !Parameter region
        accessKeyID: !Secret aws.accessKeyID
        secretAccessKey: !Secret aws.secretAccessKey
  - name: filter-empty-load-balancers
    image: projectnebula/core:latest-python
    spec:
      aws: &aws
        region: !Parameter region
        accessKeyID: !Secret aws.accessKeyID
        secretAccessKey: !Secret aws.secretAccessKey
      loadbalancers: !Output {from: describe-ELBv2-load-balancers, name: loadbalancers}
      targetgroups: !Output {from: describe-ELBv2-load-balancers, name: targetgroups}
      targets: !Output {from: describe-ELBv2-load-balancers, name: targets}
      confetti: true
    inputFile: https://raw.githubusercontent.com/puppetlabs/relay-workflows/master/elbv2-reaper/filter-loadbalancers.py
  - name: approval
    description: Wait for manual approval to delete load balancers 
    type: approval
    dependsOn: filter-empty-load-balancers
  - name: delete-load-balancers
    image: projectnebula/elbv2-delete-load-balancers
    dependsOn: approval 
    when: 
      - !Fn.equals [!Parameter dryRun, 'false']
    spec:
      aws: *aws
      elb_arns: !Output {from: filter-empty-load-balancers, name: elb_arns}
