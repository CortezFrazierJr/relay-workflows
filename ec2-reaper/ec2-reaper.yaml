apiVersion: v1
summary: Terminate EC2 instances without valid lifetime tag
description: >
  This workflow looks at all of the EC2 instances in a given account and region and selects a subset of those to terminate. Requires an AWS account with permissions to delete EC2 instances. The termination criteria are:\n\n* Not tagged with a termination date or lifetime after 4 minutes\n* The termination_date or lifetime tags are present but cannot be parsed\n* The termination_date or lifetime tags indicate that the instance has expired\n\nAn instance may be configured to never terminate if its lifetime tag has the special value indefinite. The `termination_date` or `lifetime` labels are present but cannot be parsed. \n* The `termination_date` or `lifetime` labels indicate that the instance has expired.\n\nAn instance may be configured to never terminate if its `lifetime` label has the special value `indefinite`. Other valid values for the `lifetime` label are of the form `<number><unit>` where `<number>` is any integer and `<unit>` is a time unit of `w`(weeks), `h`(hours), `d`(days) or `m`(months). So, as an example, if the `lifetime` label for an instance has a value of `43w` then it should be terminated after it's 43 weeks old.
homepage: https://github.com/puppetlabs/relay-workflows/tree/master/ec2-reaper
tags:
  - cost optimization

# Uncomment out this trigger to run this workflow hourly.
# triggers:
# - name: schedule
#   source:
#     type: schedule
#     schedule: '0 * * * *'
#   binding:
#     parameters:
#       region: us-east-1
#       dryRun: true
#       lifetimeTag: lifetime
#       terminationDateTag: termination_date

parameters:
  region:
    description: The AWS region to run in
    default: us-east-1
  terminationDateTag:
    description: The name of the tag to use for determining the termination date
    default: termination_date
  lifetimeTag:
    description: The name of the tag to use for determining the lifetime
    default: lifetime
  dryRun:
    description: True if you don't want to perform actual WRITE operations
    default: 'true'

steps:
- name: describe-instances
  image: relaysh/aws-ec2-step-instances-describe
  spec:
    aws: &aws
      connection: !Connection { type: aws, name: my-aws-account }
      region: !Parameter region
- name: filter-instances
  image: relaysh/core:latest-python
  spec:
    terminationDateTag: !Parameter terminationDateTag
    lifetimeTag: !Parameter lifetimeTag
    instances: !Output {from: describe-instances, name: instances}
  inputFile: https://raw.githubusercontent.com/puppetlabs/relay-workflows/master/ec2-reaper/filter-instances.py
- name: termination-approval
  description: Wait for approval to terminate instances
  type: approval
  dependsOn: filter-instances
  when:
    - !Fn.equals [!Parameter dryRun, 'false']
- name: terminate-instances
  dependsOn: termination-approval
  image: relaysh/aws-ec2-step-instances-terminate
  when:
    - !Fn.equals [!Parameter dryRun, 'false']
  spec:
    aws: *aws
    instanceIDs: !Output {from: filter-instances, name: instanceIDs}
