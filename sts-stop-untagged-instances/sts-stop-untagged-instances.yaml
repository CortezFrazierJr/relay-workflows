apiVersion: v1
description: Assume IAM role and stop EC2 instances that are untagged

# Uncomment out this trigger to run this workflow hourly.
# triggers:
# - name: schedule
#   source:
#     type: schedule
#     schedule: '0 * * * *'
#   binding:
#     parameters:
#       region: us-east-1
#       dryRun: true
#       roleARN: "" # Insert your role ARN here

parameters:
  region:
    description: The AWS region to run in
    default: us-east-1
  dryRun:
    description: True if you don't want to perform actual WRITE operations
    default: 'true'
  roleARN:
    description: ARN of the IAM role to assume 
    default: ""

steps:
- name: assume-role
  image: relaysh/sts-assume-role
  spec:
    aws: 
      connection: !Connection { type: aws, name: my-aws-account }
      region: !Parameter region
    roleARN: !Parameter roleARN
    roleSessionName: my-session
- name: describe-instances
  image: relaysh/aws-ec2-step-instances-describe
  spec:
    aws: &assumerole
      connection: !Output {from: assume-role, name: connection }
      region: !Parameter region
- name: filter-instances
  image: relaysh/core:latest-python
  spec:
    instances: !Output {from: describe-instances, name: instances}
  inputFile: https://raw.githubusercontent.com/puppetlabs/relay-workflows/master/sts-stop-untagged-instances/filter-instances.py
- name: approval
  description: Wait for approval to stop instances 
  type: approval
  dependsOn: filter-instances
  when: 
    - !Fn.equals [!Parameter dryRun, 'false']
- name: stop-instances
  dependsOn: approval
  image: relaysh/aws-ec2-step-instances-stop
  when: 
    - !Fn.equals [!Parameter dryRun, 'false']
  spec:
    aws: *assumerole
    instanceIDs: !Output {from: filter-instances, name: instanceIDs}


